<?xml version="1.0" encoding="UTF-8"?>
<!--
CAUTION: Do not modify this file unless you know what you are doing.
         Unexpected results may occur if the code is changed deliberately.
-->
<dbmodel pgmodeler-ver="0.9.2" last-position="0,0" last-zoom="1" max-obj-count="62"
	 default-schema="public" default-owner="postgres">
<database name="new_database" is-template="false" allow-conns="true">
</database>

<schema name="public" layer="0" fill-color="#e1e1e1" sql-disabled="true">
</schema>

<table name="member" layer="0" collapse-mode="2" max-obj-count="20">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[This table will hold the global member records for a Codidact Instance. A member should only have one email to login with, that would be stored here. Does not include details such as password storage and hashing.]]></comment>
	<position x="480" y="380"/>
	<column name="id" alias="Member ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="Member creation date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="Member last modifed date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member" alias="Member created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member" alias="Member last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="display_name" alias="Member display name text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="bio" alias="Member biography text">
		<type name="text" length="0"/>
	</column>
	<column name="email" alias="Member email address text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="gravatar_hash" alias="Member gravatar hash text">
		<type name="text" length="0"/>
		<comment><![CDATA[is this not null?]]></comment>
	</column>
	<column name="location" alias="Member location text">
		<type name="text" length="0"/>
	</column>
	<column name="is_from_stack_exchange" alias="Member ex stack exchange status" not-null="true" default-value="FALSE">
		<type name="bool" length="0"/>
	</column>
	<column name="stack_exchange_id" alias="Member Stack Exchange account ID">
		<type name="bigint" length="0"/>
	</column>
	<column name="stack_exchange_validated_at" alias="Member Stack Exchange account validation date/time">
		<type name="timestamp" length="0"/>
	</column>
	<column name="stack_exchange_last_imported_at" alias="Member Stack Exchange last data import date/time" not-null="true">
		<type name="timestamp" length="0"/>
	</column>
	<column name="is_email_verified" alias="Member email address verfied status" not-null="true" default-value="FALSE">
		<type name="bool" length="0"/>
	</column>
	<column name="is_suspended" alias="Member suspension status" not-null="true" default-value="FALSE">
		<type name="bool" length="0"/>
	</column>
	<column name="suspension_end_at" alias="Member suspension end date/time">
		<type name="timestamp" length="0"/>
	</column>
	<constraint name="member_pk" type="pk-constr" alias="Member primary key" table="public.member">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="member_email_uq" type="uq-constr" alias="Member email unique column" table="public.member">
		<columns names="email" ref-type="src-columns"/>
	</constraint>
</table>

<table name="Template" layer="0" collapse-mode="2" faded-out="true" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="40" y="2360"/>
	<column name="id" alias="&lt;TABLE&gt; ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="&lt;TABLE&gt; created date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="&lt;TABLE&gt; last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member" alias="&lt;Table&gt; created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member" alias="&lt;Table&gt; last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="&lt;Table&gt;_pk" type="pk-constr" alias="&lt;Table&gt; ID - primary key" table="public.&quot;Template&quot;">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="trust_level" layer="0" collapse-mode="2" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Name for each trust level and an explanation of each that a user should get when they get to that level. ]]></comment>
	<position x="540" y="20"/>
	<column name="id" alias="TrustLevel ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="TrustLevel creation date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modifed_at" alias="TrustLevel last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member" alias="TrustLevel created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member" alias="TrustLevel last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="display_name" alias="TrustLevel display name text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="explanation" alias="TrustLevel explanation text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="trust_level_pk" type="pk-constr" alias="TrustLevel primary key" table="public.trust_level">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="trust_level_name_uq" type="uq-constr" alias="TrustLevel - Name unique column" table="public.trust_level">
		<columns names="display_name" ref-type="src-columns"/>
	</constraint>
	<constraint name="trust_level_explanation_uq" type="uq-constr" alias="TrustLevel - Explanation unique column" table="public.trust_level">
		<columns names="explanation" ref-type="src-columns"/>
	</constraint>
</table>

<table name="post" layer="0" collapse-mode="2" max-obj-count="24">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[I thought about splitting into a Answers table and and QuestionsTable but doing it in the same table lets comments have a PostsId instead of a QuestionsId and a AnswersId. Meta posts are denoted by the IsMeta column. Type of post is determined by the PostTypeId]]></comment>
	<position x="80" y="740"/>
	<column name="id" alias="Post ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="Post creation date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="Post last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member_id" alias="Post &lt;-&gt; created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member_id" alias="Post &lt;-&gt; last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="member_id" alias="Post &lt;-&gt; Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="title" alias="Post title text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="body" alias="Post body text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="upvotes" alias="Post upvotes count" not-null="true" default-value="0">
		<type name="smallint" length="0"/>
	</column>
	<column name="downvotes" alias="Post downvotes count" not-null="true" default-value="0">
		<type name="smallint" length="0"/>
	</column>
	<column name="net_votes" alias="Post net upvote/downvote count" default-value="Posts.Upvotes - Posts.Downvotes">
		<type name="bigint" length="0"/>
	</column>
	<column name="score" alias="Post score tally" not-null="true">
		<type name="decimal" length="0"/>
	</column>
	<column name="views" alias="Post views count" not-null="true" default-value="0">
		<type name="bigint" length="0"/>
	</column>
	<column name="post_type_id" alias="Post &lt;-&gt; PostType link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="is_accepted" alias="Post accepted status" not-null="true" default-value="FALSE">
		<type name="bool" length="0"/>
	</column>
	<column name="is_closed" alias="Post closed status" not-null="true" default-value="FALSE">
		<type name="bool" length="0"/>
	</column>
	<column name="is_protected" alias="Post protected status" not-null="true" default-value="FALSE">
		<type name="bool" length="0"/>
	</column>
	<column name="parent_post_id" alias="Post &lt;-&gt; parent Post foreign key">
		<type name="bigint" length="0"/>
	</column>
	<column name="is_meta" alias="Post meta status" not-null="true" default-value="FALSE">
		<type name="bool" length="0"/>
	</column>
	<column name="is_deleted" alias="Post deleted status" not-null="true" default-value="FALSE">
		<type name="bool" length="0"/>
	</column>
	<constraint name="post_pk" type="pk-constr" alias="Post primary key" table="public.post">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="comment" layer="0" collapse-mode="2" max-obj-count="18">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Table for the comments on posts, both questions and answers.]]></comment>
	<position x="940" y="1560"/>
	<column name="id" alias="Comment ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="Comment creation date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="Comment last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member_id" alias="Comment &lt;-&gt; created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member_id" alias="Comment &lt;-&gt; last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="member_id" alias="Comment &lt;-&gt; Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="post_id" alias="Comment &lt;-&gt; Post link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="parent_comment_id" alias="Comment &lt;-&gt; parent Comment link">
		<type name="bigint" length="0"/>
	</column>
	<column name="body" alias="Comment body text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="upvotes" alias="Comment upvotes count" not-null="true" default-value="0">
		<type name="bigint" length="0"/>
	</column>
	<column name="downvotes" alias="Comment downvotes count" not-null="true" default-value="0">
		<type name="bigint" length="0"/>
	</column>
	<column name="net_Votes" alias="Comment net upvotes/downvotes count" default-value="Comment.Upvotes - Comment.Downvotes">
		<type name="bigint" length="0"/>
	</column>
	<column name="score" alias="Comment score tally" not-null="true" default-value="0">
		<type name="decimal" length="0"/>
	</column>
	<column name="is_deleted" alias="Comment deleted status" not-null="true" default-value="FALSE">
		<type name="bool" length="0"/>
	</column>
	<column name="deleted_at" alias="Comment deleted date/time">
		<type name="timestamp" length="0"/>
	</column>
	<constraint name="comment_pk" type="pk-constr" alias="Comment primary key" table="public.comment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="vote_type" layer="0" collapse-mode="2" max-obj-count="7">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Table for the vote types, upvote/downvote.]]></comment>
	<position x="1060" y="960"/>
	<column name="id" alias="VoteType ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="VoteType creation date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="VoteType last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member_id" alias="VoteType &lt;-&gt; created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modifeid_by_member_id" alias="VoteType &lt;-&gt; last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="display_name" alias="VoteType display name text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="vote_type_pk" type="pk-constr" alias="VoteType primary key" table="public.vote_type">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="vote_type_name_uc" type="uq-constr" alias="VoteType - Name unique column" table="public.vote_type">
		<columns names="display_name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="tag" layer="0" collapse-mode="2" max-obj-count="13">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Table for all of the tags]]></comment>
	<position x="60" y="60"/>
	<column name="id" alias="Tag ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="Tag creation date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="Tag last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member_id" alias="Tag &lt;-&gt; created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member_id" alias="Tag &lt;-&gt; last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="body" alias="Tag body text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="description" alias="Tag description text">
		<type name="text" length="0"/>
	</column>
	<column name="tag_wiki" alias="Tag  wiki text">
		<type name="text" length="0"/>
	</column>
	<column name="is_active" alias="Tag active status" not-null="true" default-value="TRUE">
		<type name="bool" length="0"/>
	</column>
	<column name="synonym_tag_id" alias="Tag &lt;-&gt; synonymous Tag link">
		<type name="bigint" length="0"/>
	</column>
	<column name="usages" alias="Tag usages count" not-null="true" default-value="0">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="tag_pk" type="pk-constr" alias="Tag primary key" table="public.tag">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="post_tag" layer="0" alias="Post &lt;-&gt; Tag join table" collapse-mode="2" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="40" y="440"/>
	<column name="id" alias="PostTag ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="PostTag creation date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="PostTag last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member_id" alias="PostTag &lt;-&gt; created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member_id" alias="PostTag &lt;-&gt; last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="post_id" alias="PostTag &lt;-&gt; Post link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="tag_id" alias="PostTag &lt;-&gt; Tag link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="post_tag_pk" type="pk-constr" alias="PostTag primary key" table="public.post_tag">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="post_tag_post_tag_uc" type="uq-constr" alias="PostTag - Post, Tag unique column combination" table="public.post_tag">
		<columns names="post_id,tag_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="post_vote" layer="0" collapse-mode="2" max-obj-count="9">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[The reason for this table is so that votes by spammers/serial voters can be undone.]]></comment>
	<position x="940" y="640"/>
	<column name="id" alias="PostVote ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="PostVote creation date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="PostVote last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member_id" alias="PostVote &lt;-&gt; created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member_id" alias="PostVote &lt;-&gt; last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="post_id" alias="PostVote &lt;-&gt; Post link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="vote_type_id" alias="PostVote &lt;-&gt; VoteType link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="member_id" alias="PostVote &lt;-&gt; Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="post_vote_pk" type="pk-constr" alias="PostVote primary key" table="public.post_vote">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="post_vote_post_member_uc" type="uq-constr" alias="PostVote - Post, Member unique column combination" table="public.post_vote">
		<columns names="post_id,member_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="privilege" layer="0" collapse-mode="2" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Table for privileges]]></comment>
	<position x="960" y="20"/>
	<column name="id" alias="Privilege ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="Privilege creation date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modifiedat" alias="Privilege last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member" alias="Privilege &lt;-&gt; created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member" alias="Privilege &lt;-&gt; last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="display_name" alias="Privilege name text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="description" alias="Privilege description text">
		<type name="text" length="0"/>
	</column>
	<constraint name="privilege_pk" type="pk-constr" alias="Privilege primary key" table="public.privilege">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="privilege_display_name_uc" type="uq-constr" alias="Privilege - DisplayName unique column" table="public.privilege">
		<columns names="display_name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="member_privilege" layer="0" alias="Member &lt;-&gt; Privlege join table" collapse-mode="2" max-obj-count="12">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="920" y="320"/>
	<column name="id" alias="MemberCommunityPrivilege ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="MemberCommunityPrivilege creation date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="MemberCommunityPrivilege last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member" alias="MemberCommunityPrivilege &lt;-&gt; created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member" alias="MemberCommunityPrivilege &lt;-&gt; last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="member_id" alias="MemberCommunityPrivilege &lt;-&gt; Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="privilege_id" alias="MemberCommunityPrivilege &lt;-&gt; Privilege link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="is_suspended" alias="MemberCommunityPrivilege suspended status" not-null="true" default-value="FALSE">
		<type name="bool" length="0"/>
	</column>
	<column name="privilege_suspension_start_at" alias="MemberCommunityPrivilege suspension start date/time">
		<type name="timestamp" length="0"/>
	</column>
	<column name="privilege_suspension_end_at" alias="MemberCommunityPrivilege suspension end date/time">
		<type name="timestamp" length="0"/>
	</column>
	<constraint name="member_privilege_pk" type="pk-constr" alias="MemberPrivilege primary key" table="public.member_privilege">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="member_privilege_member_privilege_uc" type="uq-constr" alias="MemberPrivilege - Member, Privilege unique column combination" table="public.member_privilege">
		<columns names="member_id,privilege_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="post_type" layer="0" collapse-mode="2" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="80" y="1640"/>
	<column name="id" alias="PostType ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="PostType creation date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="PostType last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member" alias="PostType &lt;-&gt; created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member" alias="PostType &lt;-&gt; last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="display_name" alias="PostType name text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="description" alias="PostType description text">
		<type name="text" length="0"/>
	</column>
	<constraint name="post_type_pk" type="pk-constr" alias="PostType primary key" table="public.post_type">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="post_type_name_uc" type="uq-constr" alias="PostType - Name unique column" table="public.post_type">
		<columns names="display_name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="comment_vote" layer="0" alias="Comment &lt;-&gt; Vote join table" collapse-mode="2" max-obj-count="9">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="960" y="1200"/>
	<column name="id" alias="CommentVote ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="CommentVote creation date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="CommentVote last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member_id" alias="CommentVote &lt;-&gt; created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member_id" alias="CommentVote &lt;-&gt; last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="comment_id" alias="CommentVote &lt;-&gt; Comment link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="member_id" alias="CommentVote &lt;-&gt; Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="vote_type_id" alias="CommentVote &lt;-&gt; VoteType link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="comment_vote_pk" type="pk-constr" alias="CommentVote primary key" table="public.comment_vote">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="comment_vote_comment_member_uc" type="uq-constr" alias="CommentVote - Comment, Member unique column combination" table="public.comment_vote">
		<columns names="comment_id,member_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="table_list" layer="0" sql-disabled="true" collapse-mode="2" max-obj-count="20">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="140" y="1920"/>
	<column name="TABLE_LIST" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="member">
		<type name="smallint" length="0"/>
	</column>
	<column name="trust_level">
		<type name="smallint" length="0"/>
	</column>
	<column name="privilege">
		<type name="smallint" length="0"/>
	</column>
	<column name="member_privilege">
		<type name="smallint" length="0"/>
	</column>
	<column name="post_type">
		<type name="smallint" length="0"/>
	</column>
	<column name="post">
		<type name="smallint" length="0"/>
	</column>
	<column name="comment">
		<type name="smallint" length="0"/>
	</column>
	<column name="comment_vote">
		<type name="smallint" length="0"/>
	</column>
	<column name="tag">
		<type name="smallint" length="0"/>
	</column>
	<column name="post_tag">
		<type name="smallint" length="0"/>
	</column>
	<column name="vote_type">
		<type name="smallint" length="0"/>
	</column>
	<column name="post_vote">
		<type name="smallint" length="0"/>
	</column>
	<column name="social_media">
		<type name="smallint" length="0"/>
	</column>
	<column name="member_social_media">
		<type name="smallint" length="0"/>
	</column>
	<column name="post_status_type">
		<type name="smallint" length="0"/>
	</column>
	<column name="post_status">
		<type name="smallint" length="0"/>
	</column>
	<constraint name="TABLE_LIST_PK" type="pk-constr" table="public.table_list">
		<columns names="TABLE_LIST" ref-type="src-columns"/>
	</constraint>
</table>

<table name="social_media" layer="0" alias="SocialMedia instances" collapse-mode="2" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[The types of social media that the member can display in their profile]]></comment>
	<position x="600" y="960"/>
	<column name="id" alias="SocialMedia ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="SocialMedia created date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="SocialMedia last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member" alias="SocialMedia created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member" alias="SocialMedia last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="display_name" alias="SocialMedia name text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="account_url" alias="SocialMedia website text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="social_media_pk" type="pk-constr" alias="SocialMedia ID - primary key" table="public.social_media">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="social_media_name_uc" type="uq-constr" alias="SocialMedia - Name unique column" table="public.social_media">
		<columns names="display_name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="member_social_media" layer="0" alias="Member &lt;-&gt; SocialMedia join table" collapse-mode="2" max-obj-count="9">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[The social media that the member would like to display in their community specific profile]]></comment>
	<position x="480" y="1280"/>
	<column name="id" alias="MemberSocialMedia ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="MemberSocialMedia created date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="MemberSocialMedia last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member_id" alias="MemberSocialMedia created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member_id" alias="MemberSocialMedia last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="social_media_id" alias="MemberSocialMedia &lt;-&gt; SocialMedia link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="member_id" alias="MemberSocialMedia &lt;-&gt; Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="content" alias="MemberSocialMedia content text">
		<type name="text" length="0"/>
	</column>
	<constraint name="member_social_media_pk" type="pk-constr" alias="MemberSocialMedia ID - primary key" table="public.member_social_media">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="member_social_media_social_media_member_uc" type="uq-constr" alias="SocialMedia, Member unique column combination" table="public.member_social_media">
		<columns names="member_id,social_media_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="post_status_type" layer="0" alias="PostStatus" collapse-mode="2" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[For setting the status of a post locked/featured etc]]></comment>
	<position x="520" y="1620"/>
	<column name="id" alias="PostStatus ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="PostStatus created date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="PostStatus last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member" alias="PostStatus created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member" alias="PostStatus last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="display_name" alias="PostStatus display name text" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="description" alias="PostStatus description text">
		<type name="smallint" length="0"/>
	</column>
	<constraint name="post_status_type_pk" type="pk-constr" alias="PostStatus ID - primary key" table="public.post_status_type">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="post_status_display_name_uc" type="uq-constr" alias="PostStatus - DisplayName unique column" table="public.post_status_type">
		<columns names="display_name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="post_status" layer="0" alias="Post &lt;-&gt; PostStatusType join table" collapse-mode="2" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="60" y="1280"/>
	<column name="id" alias="PostStatus ID - Primary key" not-null="true"
	 identity-type="ALWAYS">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" alias="PostStatus created date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="last_modified_at" alias="PostStatus last modified date/time" not-null="true" default-value="NOW()">
		<type name="timestamp" length="0"/>
	</column>
	<column name="created_by_member" alias="PostStatus created by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="last_modified_by_member" alias="PostStatus last modified by Member link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="post_id" alias="PostStatus &lt;-&gt; Post link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="post_status_type_id" alias="PostStatus &lt;-&gt; PostStatusType link" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="post_status_pk" type="pk-constr" alias="PostStatus ID - primary key" table="public.post_status">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="post_status_post_status_type_post_uc" type="uq-constr" alias="PostStatus - Post, PostStatusType unique column combination" table="public.post_status">
		<columns names="post_id,post_status_type_id" ref-type="src-columns"/>
	</constraint>
</table>

<constraint name="&lt;Table&gt;_created_by_member_fk" type="fk-constr" alias="&lt;Table&gt; &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.&quot;Template&quot;">
	<columns names="created_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="&lt;Table&gt;_last_modified_by_member_fk" type="fk-constr" alias="&lt;Table&gt; &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.&quot;Template&quot;">
	<columns names="last_modified_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="created_by_member_fk" type="fk-constr" alias="TrustLevel &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.trust_level">
	<columns names="created_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="last_modified_by_member_fk" type="fk-constr" alias="TrustLevel &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.trust_level">
	<columns names="last_modified_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_created_by_member_fk" type="fk-constr" alias="Post &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post">
	<columns names="created_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_last_modified_by_member_fk" type="fk-constr" alias="Post &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post">
	<columns names="last_modified_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_parent_post_fk" type="fk-constr" alias="Post &lt;-&gt; parent Post foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.post" table="public.post">
	<columns names="parent_post_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_member_fk" type="fk-constr" alias="Post &lt;-&gt; Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post">
	<columns names="member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_post_type_fk" type="fk-constr" alias="Post &lt;-&gt; PostType foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.post_type" table="public.post">
	<columns names="post_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="comment_created_by_member_fk" type="fk-constr" alias="Comment &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.comment">
	<columns names="created_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="comment_last_modified_by_member_fk" type="fk-constr" alias="Comment &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.comment">
	<columns names="last_modified_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="comment_member_fk" type="fk-constr" alias="Comment &lt;-&gt; Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.comment">
	<columns names="member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="comment_post_fk" type="fk-constr" alias="Comment &lt;-&gt; Post foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.post" table="public.comment">
	<columns names="post_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="comment_parent_comment_fk" type="fk-constr" alias="Comment &lt;-&gt; parent Comment foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.comment" table="public.comment">
	<columns names="parent_comment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="vote_type_created_by_member_fk" type="fk-constr" alias="VoteType &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.vote_type">
	<columns names="created_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="vote_type_last_modified_by_member_fk" type="fk-constr" alias="VoteType &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.vote_type">
	<columns names="last_modifeid_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="tag_created_by_member_fk" type="fk-constr" alias="Tag &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.tag">
	<columns names="created_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="tag_last_modified_by_member_fk" type="fk-constr" alias="Tag &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.tag">
	<columns names="last_modified_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_tag_created_by_member_fk" type="fk-constr" alias="PostTag &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post_tag">
	<columns names="created_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_tag_last_modified_by_member_fk" type="fk-constr" alias="PostTag &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post_tag">
	<columns names="last_modified_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_tag_post_fk" type="fk-constr" alias="PostTag &lt;-&gt; Post foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.post" table="public.post_tag">
	<columns names="post_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_tag_tag_fk" type="fk-constr" alias="PostTag &lt;-&gt;Tag foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.tag" table="public.post_tag">
	<columns names="tag_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_vote_created_by_member_fk" type="fk-constr" alias="PostVote &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post_vote">
	<columns names="created_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_vote_last_modified_by_member_fk" type="fk-constr" alias="PostVote &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post_vote">
	<columns names="last_modified_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_vote_post_fk" type="fk-constr" alias="PostVote &lt;-&gt; Post foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.post" table="public.post_vote">
	<columns names="post_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_vote_vote_type_fk" type="fk-constr" alias="PostVote &lt;-&gt; VoteType foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.vote_type" table="public.post_vote">
	<columns names="vote_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_vote_member_fk" type="fk-constr" alias="PostVote &lt;-&gt; Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post_vote">
	<columns names="member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="privilege_created_by_member_fk" type="fk-constr" alias="Privilege &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.privilege">
	<columns names="created_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="privilege_last_modified_by_member" type="fk-constr" alias="Privilege &lt;-&gt; last modified by Member link" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.privilege">
	<columns names="last_modified_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="member_privilege_created_by_member_fk" type="fk-constr" alias="MemberPrivilege &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.member_privilege">
	<columns names="created_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="member_privilege_last_modified_by_member_fk" type="fk-constr" alias="MemberPrivilege &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.member_privilege">
	<columns names="last_modified_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="member_privilege_member_fk" type="fk-constr" alias="MemberPrivilege  &lt;-&gt; Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.member_privilege">
	<columns names="member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="member_privilege_privlege_fk" type="fk-constr" alias="MemberPrivilege &lt;-&gt; Privilege foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.privilege" table="public.member_privilege">
	<columns names="privilege_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_type_created_by_member_fk" type="fk-constr" alias="PostType &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post_type">
	<columns names="created_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_type_last_modified_by_member_fk" type="fk-constr" alias="PostType &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post_type">
	<columns names="last_modified_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="comment_vote_created_by_member_fk" type="fk-constr" alias="CommentVote &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.comment_vote">
	<columns names="created_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="comment_vote_last_modified_by_member_fk" type="fk-constr" alias="CommentVote &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.comment_vote">
	<columns names="last_modified_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="commentvote_comment_fk" type="fk-constr" alias="CommentVote &lt;-&gt; Comment foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.comment" table="public.comment_vote">
	<columns names="comment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="comment_vote_member_fk" type="fk-constr" alias="CommentVote &lt;-&gt; Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.comment_vote">
	<columns names="member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="comment_vote_vote_type_fk" type="fk-constr" alias="CommentVote &lt;-&gt; VoteType foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.vote_type" table="public.comment_vote">
	<columns names="vote_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="social_media_created_by_member_fk" type="fk-constr" alias="SocialMedia &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.social_media">
	<columns names="created_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="social_media_last_modified_by_member_fk" type="fk-constr" alias="SocialMedia &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.social_media">
	<columns names="last_modified_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="member_social_media_created_by_member_fk" type="fk-constr" alias="MemberSocialMedia &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.member_social_media">
	<columns names="created_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="member_social_media_last_modified_by_member_fk" type="fk-constr" alias="MemberSocialMedia &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.member_social_media">
	<columns names="last_modified_by_member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="member_social_media_social_media_fk" type="fk-constr" alias="MemberSocialMedia &lt;-&gt; SocialMedia foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.social_media" table="public.member_social_media">
	<columns names="social_media_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="member_social_media_member_fk" type="fk-constr" alias="MemberSocialMedia &lt;-&gt; Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.member_social_media">
	<columns names="member_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_status_created_by_member_fk" type="fk-constr" alias="PostStatus &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post_status_type">
	<columns names="created_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_status_last_modified_by_member_fk" type="fk-constr" alias="PostStatus &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post_status_type">
	<columns names="last_modified_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_status_created_by_member_fk" type="fk-constr" alias="PostStatus &lt;-&gt; created by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post_status">
	<columns names="created_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_status_last_modified_by_member_fk" type="fk-constr" alias="PostStatus &lt;-&gt; last modified by Member foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.member" table="public.post_status">
	<columns names="last_modified_by_member" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_status_post_id_fk" type="fk-constr" alias="PostStatus &lt;-&gt; Post foreign key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.post" table="public.post_status">
	<columns names="post_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="post_status_post_status_type_fk" type="fk-constr" alias="PostStatus &lt;-&gt; PostStatusType foregn key" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.post_status_type" table="public.post_status">
	<columns names="post_status_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<relationship name="rel_Posts_Posts" type="relfk" layer="0"
	 src-table="public.post"
	 dst-table="public.post" reference-fk="post_parent_post_fk"
	 src-required="false" dst-required="false">
	<line>
		<position x="458.399" y="899.22"/>
	<position x="458.399" y="717"/>
	<position x="316.933" y="717"/>
	</line>
	<label ref-type="name-label">
		<position x="4.85628" y="-4.15"/>
	</label>
</relationship>

<relationship name="&quot;rel_Comments_Posts&quot;" type="relfk" layer="0"
	 src-table="public.comment"
	 dst-table="public.post" reference-fk="comment_post_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_Comments_Comments" type="relfk" layer="0"
	 src-table="public.comment"
	 dst-table="public.comment" reference-fk="comment_parent_comment_fk"
	 src-required="false" dst-required="false">
	<line>
		<position x="1349.48" y="1691.55"/>
	<position x="1349.48" y="1537"/>
	<position x="1197.65" y="1537"/>
	</line>
</relationship>

<relationship name="&quot;rel_PostsTags_Posts&quot;" type="relfk" layer="0"
	 src-table="public.post_tag"
	 dst-table="public.post" reference-fk="post_tag_post_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_PostsTags_Tags&quot;" type="relfk" layer="0"
	 src-table="public.post_tag"
	 dst-table="public.tag" reference-fk="post_tag_tag_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_PostsVotes_Posts&quot;" type="relfk" layer="0"
	 src-table="public.post_vote"
	 dst-table="public.post" reference-fk="post_vote_post_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_PostsVotes_VoteTypes&quot;" type="relfk" layer="0"
	 src-table="public.post_vote"
	 dst-table="public.vote_type" reference-fk="post_vote_vote_type_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_PostsVotes_Users&quot;" type="relfk" layer="0"
	 src-table="public.post_vote"
	 dst-table="public.member" reference-fk="post_vote_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Posts_Users&quot;" type="relfk" layer="0"
	 src-table="public.post"
	 dst-table="public.member" reference-fk="post_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Comments_Users&quot;" type="relfk" layer="0"
	 src-table="public.comment"
	 dst-table="public.member" reference-fk="comment_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Template_cp_Member&quot;" type="relfk" layer="0"
	 src-table="public.member_privilege"
	 dst-table="public.member" reference-fk="member_privilege_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Template_cp_Privilege&quot;" type="relfk" layer="0"
	 src-table="public.member_privilege"
	 dst-table="public.privilege" reference-fk="member_privilege_privlege_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_CommentVote_Comment&quot;" type="relfk" layer="0"
	 src-table="public.comment_vote"
	 dst-table="public.comment" reference-fk="commentvote_comment_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_CommentVote_Member&quot;" type="relfk" layer="0"
	 src-table="public.comment_vote"
	 dst-table="public.member" reference-fk="comment_vote_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_CommentVote_VoteTypes&quot;" type="relfk" layer="0"
	 src-table="public.comment_vote"
	 dst-table="public.vote_type" reference-fk="comment_vote_vote_type_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Post_PostType&quot;" type="relfk" layer="0"
	 src-table="public.post"
	 dst-table="public.post_type" reference-fk="post_post_type_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Template_member&quot;" type="relfk" layer="0" faded-out="true"
	 src-table="public.&quot;Template&quot;"
	 dst-table="public.member" reference-fk="&lt;Table&gt;_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Template_member1&quot;" type="relfk" layer="0" faded-out="true"
	 src-table="public.&quot;Template&quot;"
	 dst-table="public.member" reference-fk="&lt;Table&gt;_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_TrustLevel_member&quot;" type="relfk" layer="0"
	 src-table="public.trust_level"
	 dst-table="public.member" reference-fk="created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_TrustLevel_member1&quot;" type="relfk" layer="0"
	 src-table="public.trust_level"
	 dst-table="public.member" reference-fk="last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Template_cp_member&quot;" type="relfk" layer="0"
	 src-table="public.social_media"
	 dst-table="public.member" reference-fk="social_media_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Template_cp_member1&quot;" type="relfk" layer="0"
	 src-table="public.social_media"
	 dst-table="public.member" reference-fk="social_media_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Template_cp_member2&quot;" type="relfk" layer="0"
	 src-table="public.member_social_media"
	 dst-table="public.member" reference-fk="member_social_media_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Template_cp_member3&quot;" type="relfk" layer="0"
	 src-table="public.member_social_media"
	 dst-table="public.member" reference-fk="member_social_media_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_member_social_media_social_media" type="relfk" layer="0"
	 src-table="public.member_social_media"
	 dst-table="public.social_media" reference-fk="member_social_media_social_media_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_member_social_media_member" type="relfk" layer="0"
	 src-table="public.member_social_media"
	 dst-table="public.member" reference-fk="member_social_media_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Privilege_member&quot;" type="relfk" layer="0"
	 src-table="public.privilege"
	 dst-table="public.member" reference-fk="privilege_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Privilege_member1&quot;" type="relfk" layer="0"
	 src-table="public.privilege"
	 dst-table="public.member" reference-fk="privilege_last_modified_by_member"
	 src-required="false" dst-required="false"/>

<relationship name="rel_member_community_privilege_member" type="relfk" layer="0"
	 src-table="public.member_privilege"
	 dst-table="public.member" reference-fk="member_privilege_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_member_community_privilege_member1" type="relfk" layer="0"
	 src-table="public.member_privilege"
	 dst-table="public.member" reference-fk="member_privilege_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_post_type_member" type="relfk" layer="0"
	 src-table="public.post_type"
	 dst-table="public.member" reference-fk="post_type_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_post_type_member1" type="relfk" layer="0"
	 src-table="public.post_type"
	 dst-table="public.member" reference-fk="post_type_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_post_member" type="relfk" layer="0"
	 src-table="public.post"
	 dst-table="public.member" reference-fk="post_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_post_member1" type="relfk" layer="0"
	 src-table="public.post"
	 dst-table="public.member" reference-fk="post_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_comment_member" type="relfk" layer="0"
	 src-table="public.comment"
	 dst-table="public.member" reference-fk="comment_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_comment_member1" type="relfk" layer="0"
	 src-table="public.comment"
	 dst-table="public.member" reference-fk="comment_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_CommentVote_member&quot;" type="relfk" layer="0"
	 src-table="public.comment_vote"
	 dst-table="public.member" reference-fk="comment_vote_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_CommentVote_member1&quot;" type="relfk" layer="0"
	 src-table="public.comment_vote"
	 dst-table="public.member" reference-fk="comment_vote_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_tag_member" type="relfk" layer="0"
	 src-table="public.tag"
	 dst-table="public.member" reference-fk="tag_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_tag_member1" type="relfk" layer="0"
	 src-table="public.tag"
	 dst-table="public.member" reference-fk="tag_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_PostTag_member&quot;" type="relfk" layer="0"
	 src-table="public.post_tag"
	 dst-table="public.member" reference-fk="post_tag_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_PostTag_member1&quot;" type="relfk" layer="0"
	 src-table="public.post_tag"
	 dst-table="public.member" reference-fk="post_tag_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_VoteType_member&quot;" type="relfk" layer="0"
	 src-table="public.vote_type"
	 dst-table="public.member" reference-fk="vote_type_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_VoteType_member1&quot;" type="relfk" layer="0"
	 src-table="public.vote_type"
	 dst-table="public.member" reference-fk="vote_type_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_post_vote_member" type="relfk" layer="0"
	 src-table="public.post_vote"
	 dst-table="public.member" reference-fk="post_vote_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_post_vote_member1" type="relfk" layer="0"
	 src-table="public.post_vote"
	 dst-table="public.member" reference-fk="post_vote_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Template_cp_member4&quot;" type="relfk" layer="0"
	 src-table="public.post_status_type"
	 dst-table="public.member" reference-fk="post_status_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Template_cp_member5&quot;" type="relfk" layer="0"
	 src-table="public.post_status_type"
	 dst-table="public.member" reference-fk="post_status_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Template_cp_member6&quot;" type="relfk" layer="0"
	 src-table="public.post_status"
	 dst-table="public.member" reference-fk="post_status_created_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_Template_cp_member7&quot;" type="relfk" layer="0"
	 src-table="public.post_status"
	 dst-table="public.member" reference-fk="post_status_last_modified_by_member_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_post_status_post" type="relfk" layer="0"
	 src-table="public.post_status"
	 dst-table="public.post" reference-fk="post_status_post_id_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_post_status_post_status_type" type="relfk" layer="0"
	 src-table="public.post_status"
	 dst-table="public.post_status_type" reference-fk="post_status_post_status_type_fk"
	 src-required="false" dst-required="false"/>

</dbmodel>
